/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fatec.poo.view;

import fatec.poo.model.Curso;
import fatec.poo.model.Instrutor;
import fatec.poo.model.Pessoa;
import fatec.poo.model.Turma;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author bruno
 */
public class GuiAlocarInstrutor extends javax.swing.JFrame {

    /**
     * Creates new form GuiAlocarInstrutor
     */
    public GuiAlocarInstrutor(ArrayList<Curso> cadCurso, ArrayList<Pessoa> cadInstrutor) {
        initComponents();
        
        this.cadCurso = cadCurso;
        this.cadPessoa = cadInstrutor;
        desabilitarBotoes();
        
        for (Curso curso : cadCurso)
            jComboBoxCurso.addItem(curso.getSigla());
       
        for (Pessoa pessoa : cadInstrutor){
            if (pessoa instanceof Instrutor)
                jComboBoxInstrutor.addItem(pessoa.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxCurso = new javax.swing.JComboBox<>();
        jComboBoxTurma = new javax.swing.JComboBox<>();
        jComboBoxInstrutor = new javax.swing.JComboBox<>();
        btnAlocar = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        txtSituacao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alocar Instrutor");
        setResizable(false);

        jLabel1.setText("Curso");

        jLabel2.setText("Turma");

        jLabel3.setText("Instrutor");

        jLabel4.setText("Situação");

        jComboBoxCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCursoActionPerformed(evt);
            }
        });

        jComboBoxTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTurmaActionPerformed(evt);
            }
        });

        jComboBoxInstrutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxInstrutorActionPerformed(evt);
            }
        });

        btnAlocar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Inserir.png"))); // NOI18N
        btnAlocar.setText("Alocar");
        btnAlocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlocarActionPerformed(evt);
            }
        });

        btnLiberar.setText("Liberar");
        btnLiberar.setEnabled(false);
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Sair.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        txtSituacao.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxInstrutor, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBoxCurso, javax.swing.GroupLayout.Alignment.LEADING, 0, 94, Short.MAX_VALUE)
                                .addComponent(jComboBoxTurma, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(btnAlocar)
                        .addGap(18, 18, 18)
                        .addComponent(btnLiberar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlocar, btnLiberar, btnSair});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxInstrutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlocar)
                    .addComponent(btnLiberar)
                    .addComponent(btnSair))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAlocar, btnLiberar, btnSair});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlocarActionPerformed
        if (!isDadosOk())
            return;
        
        // Turma e Instrutor Atual
        Turma turmaAtual = cadTurma.get(indexTurma);
        Instrutor instrutorAtual = (Instrutor)cadPessoa.get(indexInstrutor);
        
        instrutorAtual.addTurma(turmaAtual);
        
        jComboBoxTurma.setSelectedIndex(indexTurma);
    }//GEN-LAST:event_btnAlocarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void jComboBoxCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCursoActionPerformed
        
        // Limpando combobox        
        cadTurma = new ArrayList<>();
        int qtdElements = jComboBoxTurma.getItemCount();
        for(int index = 0; index < qtdElements; index++){
            jComboBoxTurma.removeItemAt(0);
        }
        
        // Adicionando novos
        Curso cursoAtual = cadCurso.get(getCursoComboBox());
        
        cadTurma = cursoAtual.getTurmas();
        for (Turma turma : cursoAtual.getTurmas())
            jComboBoxTurma.addItem(turma.getSiglaTurma());
    }//GEN-LAST:event_jComboBoxCursoActionPerformed

    private void jComboBoxTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTurmaActionPerformed
        desabilitarBotoes();
        
        indexTurma = -1;
        int indexGeral = 0;
        
        for (Turma turma : cadTurma){
            if (jComboBoxTurma.getSelectedItem().toString().equals(turma.getSiglaTurma())){
                
                if (indexInstrutor == -1)
                    desabilitarBotoes();
                else if (turma.getInstrutor() == cadPessoa.get(indexInstrutor))
                    habilitarLiberacao();
                else
                    habilitarAlocacao();
                
                indexTurma = indexGeral;
                return;
            }
            
            indexGeral++;
        }
    }//GEN-LAST:event_jComboBoxTurmaActionPerformed

    private void jComboBoxInstrutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxInstrutorActionPerformed
        indexInstrutor = -1;
        int indexPessoa = 0;
        for (Pessoa pessoa : cadPessoa){
            if(pessoa instanceof Instrutor){
                if(pessoa.getNome().equals(jComboBoxInstrutor.getSelectedItem().toString())){
                    indexInstrutor = indexPessoa;
                    break;
                }
            }
            indexPessoa++;
        }
        
        if (indexTurma != -1)
            jComboBoxTurma.setSelectedIndex(indexTurma);
    }//GEN-LAST:event_jComboBoxInstrutorActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        if (!isDadosOk())
            return;
        
        // Turma e Instrutor Atual
        Turma turmaAtual = cadTurma.get(indexTurma);
        Instrutor instrutorAtual = (Instrutor)cadPessoa.get(indexInstrutor);
        
        instrutorAtual.removeTurma(turmaAtual);
        
        habilitarAlocacao();
    }//GEN-LAST:event_btnLiberarActionPerformed

    private void habilitarLiberacao(){
        txtSituacao.setText("Alocada");
        btnAlocar.setEnabled(false);
        btnLiberar.setEnabled(true);
    }
    
    private void habilitarAlocacao(){
        txtSituacao.setText("Liberada");
        btnAlocar.setEnabled(true);
        btnLiberar.setEnabled(false);
    }
    
    private void desabilitarBotoes(){
        btnAlocar.setEnabled(false);
        btnLiberar.setEnabled(false);
    }
    
    //
    // Método retorna curso atual selecionado em 'jComboBoxCurso'
    //
    private int getCursoComboBox(){
        
        int cursoEscolhido = -1;
        for (Curso curso : cadCurso){
            cursoEscolhido++;
            if(curso.getSigla().equals(jComboBoxCurso.getSelectedItem().toString())){
                indexCurso = cursoEscolhido;
                break;
            }
        }
        
        return cursoEscolhido;
    }
    
    //
    // Método verifica se campos estão preenchidos corretamente
    //
    private boolean isDadosOk(){
        if(indexCurso < 0){
            JOptionPane.showMessageDialog(null, "Curso não definido!", "Aviso", JOptionPane.ERROR_MESSAGE);
            return false;
        }
            
        else if (indexInstrutor < 0){
            JOptionPane.showMessageDialog(null, "Instrutor não definido!", "Aviso", JOptionPane.ERROR_MESSAGE);
            return false;
        }
            
        else if (indexTurma < 0){
            JOptionPane.showMessageDialog(null, "Turma não definida!", "Aviso", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }
    
    //
    // Método desabilita combo box
    //
    private void desabilitarComboBox(){
        jComboBoxCurso.setEnabled(false);
        jComboBoxInstrutor.setEnabled(false);
        jComboBoxTurma.setEnabled(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlocar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> jComboBoxCurso;
    private javax.swing.JComboBox<String> jComboBoxInstrutor;
    private javax.swing.JComboBox<String> jComboBoxTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtSituacao;
    // End of variables declaration//GEN-END:variables
    // Arrays ->
    private ArrayList<Curso> cadCurso;
    private ArrayList<Pessoa> cadPessoa;
    private ArrayList<Turma> cadTurma;
    
    // Auxiliares ->
    private int indexCurso = -1;
    private int indexInstrutor = -1;
    private int indexTurma = -1;
}
